
# This set ups the parameter grid search
# grid: specified parameters and a list of values
# results: what attributes of the experiment class include into results file
# bandit_model, bandit_name, experiment, init_random_state are links to user code
# folder: where to place the results
# run_times: this many times repeat for each parameters tuple
# random_seed: use this random seed
# grid_filter: a link to user function that returns True if a given parameter combination should be skipped
#

common_pipeline: &common_pipeline
  init_interest: !function src/mathmodel.BanditNoiseLoopModel.interest_init
  experiment: !function src/experiment.BanditLoopExperiment
  init_random_state: !function src/experiment.init_random_state
  grid_filter: !function src/experiment.skip_params

grid_base: &grid_base
  results:
    interest: "User interests"
    loop_amp: '\abs(\mu^t - \mu^0)'
  run_times: 4
  random_seed: "${env.RANDOMSEED}"


grid_analysis: &grid_analysis !ExploreParams
  <<: *grid_base
  grid:
    p: [1.0]
    w: [0]
    M: [1,2,3,4,5,6,7,8,9,10]
    l: [1,2,3,4,5,6,7,8,9,10]
    b: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
    # Q is not used but declared
    Q: [0]
    T: [2000]
  pipeline:
    <<: *common_pipeline
    bandit_model: !function src/experiment.get_ts_model
    bandit_name: 'ts_model'
  folder: "${env.TARGETFOLDER}/grid"


big_grid_analysis: &big_grid_analysis !ExploreParams
  <<: *grid_base
  grid:
    p: [1.0]
    w: [0]
    M: [4,10,50,75,100]
    l: [1,4,10,50,75,100]
    b: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
    # Q is not used but declared
    Q: [0]
    T: [2000]
  pipeline:
    <<: *common_pipeline
    bandit_model: !function src/experiment.get_ts_model
    bandit_name: 'ts_model'
  folder: "${env.TARGETFOLDER}/big"
  run_times: 1

optimal_grid_analysis: &optimal_grid_analysis !ExploreParams
  <<: *grid_base
  grid:
    p: [1.0]
    w: [0., 1., 4., 10.]
    M: [10]
    l: [4]
    b: [0.0, 0.3, 0.5, 0.8, 1.0]
    # Q is not used but declared
    Q: [0]
    T: [5000]
    epsilon: [0.1]
  pipeline:
    <<: *common_pipeline
    bandit_model: !function src/experiment.get_optimal_model
    bandit_name: 'optimal_model'
  folder: "${env.TARGETFOLDER}/optimal"

greedy_grid_analysis: &greedy_grid_analysis !ExploreParams
  <<: *grid_base
  grid:
    p: [1.0]
    w: [0., 1., 4., 10.]
    M: [10]
    l: [4]
    b: [0.0, 0.3, 0.5, 0.8, 1.0]
    # Q is not used but declared
    Q: [0]
    T: [5000]
    epsilon: [0.01, 0.1, 0.5]
  pipeline:
    <<: *common_pipeline
    bandit_model: !function src/experiment.get_epsilon_greedy_model
    bandit_name: 'epsilon_greedy_model'
  folder: "${env.TARGETFOLDER}/epsilon_greedy"

big_grid_pipeline: !GenericPipeline
  runs:
    - *big_grid_analysis

optimal_grid_pipeline: !GenericPipeline
  runs:
    - *optimal_grid_analysis

greedy_grid_pipeline: !GenericPipeline
  runs:
    - *greedy_grid_analysis

grid_pipeline: !GenericPipeline
  runs:
    - *grid_analysis
